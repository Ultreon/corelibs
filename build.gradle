import static java.lang.System.getenv

plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
}

group 'dev.ultreon.corelibs'
version '0.3.0'

mkdir("${rootProject.projectDir}/.mvnrepo")

allprojects {
    apply plugin: 'java'
    apply plugin: "java-library"
    apply plugin: 'maven-publish'

    group 'dev.ultreon.corelibs'

    base {
        archivesName = "corelibs-$project.name"
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        testImplementation "org.junit.jupiter:junit-jupiter-api:5.9.0"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.9.0"

        implementation "org.jetbrains:annotations:$annotations_version"
    }

    processResources {
        from file("$rootProject.projectDir/LICENSE.md")
    }

    test {
        useJUnitPlatform()
    }

    java {
        withSourcesJar()
    }

    compileJava {
        sourceCompatibility "11"
        targetCompatibility "11"
    }

    jar.archiveBaseName = "corelibs-$project.name"
    sourcesJar.archiveBaseName = "corelibs-$project.name"

    publishing {
        publications {
            register('mavenJava', MavenPublication) {
                from components.java
            }
        }

        publishing {
            repositories {
                maven {
                    name = "UltreonMavenReleases"
                    url = uri("https://maven.ultreon.dev/releases")
                    credentials {
                        username = findProperty("ultreonmvn.name") ?: getenv("ULTREON_MVN_NAME")
                        password = findProperty("ultreonmvn.secret") ?: getenv("ULTREON_MVN_SEC")
                    }
                    authentication {
                        create("basic", BasicAuthentication)
                    }
                }

                maven {
                    name = "UltreonMavenSnapshots"
                    url = uri("https://maven.ultreon.dev/snapshots")
                    credentials {
                        username = findProperty("ultreonmvn.name") ?: getenv("ULTREON_MVN_NAME")
                        password = findProperty("ultreonmvn.secret") ?: getenv("ULTREON_MVN_SEC")
                    }
                    authentication {
                        create("basic", BasicAuthentication)
                    }
                }
            }
        }
    }

    afterEvaluate {
        publish {
            dependsOn "build"
        }
    }

    tasks.withType(GenerateModuleMetadata) {
        enabled = false
    }
}

afterEvaluate {
    subprojects {
        project.configurations.compileClasspath.resolve() // Only in a configuration block
    }
    javadoc {
        source(subprojects.collect { subproject ->
            subproject.sourceSets.main.allJava.sourceDirectories
        })
        title = "CoreLibs"
        description = "CoreLibs is the core library collection for Ultreon Team projects."
        setDestinationDir(file("$rootProject.projectDir/build/docs/javadoc"))
        // Configure the classpath
        classpath = files(subprojects.collect { subproject ->
            subproject.sourceSets.main.compileClasspath
        })
        (options as StandardJavadocDocletOptions).links(
                "https://javadoc.io/doc/org.jetbrains/annotations/$annotations_version",
        )
    }
}
